  main.cpp
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(43,43): warning C4251: 'dynamixel::GroupBulkRead::id_list_': class 'std::vector<uint8_t,std::allocator<uint8_t>>'에서는 class 'dynamixel::GroupBulkRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\packet_handler.h(205): message : 'std::vector<uint8_t,std::allocator<uint8_t>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(44,48): warning C4251: 'dynamixel::GroupBulkRead::address_list_': class 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>'에서는 class 'dynamixel::GroupBulkRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(44): message : 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(45,47): warning C4251: 'dynamixel::GroupBulkRead::length_list_': class 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>'에서는 class 'dynamixel::GroupBulkRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(44): message : 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46,45): warning C4251: 'dynamixel::GroupBulkRead::data_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupBulkRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(47,46): warning C4251: 'dynamixel::GroupBulkRead::error_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupBulkRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_write.h(43,43): warning C4251: 'dynamixel::GroupBulkWrite::id_list_': class 'std::vector<uint8_t,std::allocator<uint8_t>>'에서는 class 'dynamixel::GroupBulkWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\packet_handler.h(205): message : 'std::vector<uint8_t,std::allocator<uint8_t>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_write.h(44,48): warning C4251: 'dynamixel::GroupBulkWrite::address_list_': class 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>'에서는 class 'dynamixel::GroupBulkWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(44): message : 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_write.h(45,47): warning C4251: 'dynamixel::GroupBulkWrite::length_list_': class 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>'에서는 class 'dynamixel::GroupBulkWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(44): message : 'std::map<uint8_t,uint16_t,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint16_t>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_write.h(46,45): warning C4251: 'dynamixel::GroupBulkWrite::data_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupBulkWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_sync_read.h(43,43): warning C4251: 'dynamixel::GroupSyncRead::id_list_': class 'std::vector<uint8_t,std::allocator<uint8_t>>'에서는 class 'dynamixel::GroupSyncRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\packet_handler.h(205): message : 'std::vector<uint8_t,std::allocator<uint8_t>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_sync_read.h(44,45): warning C4251: 'dynamixel::GroupSyncRead::data_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupSyncRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_sync_read.h(45,46): warning C4251: 'dynamixel::GroupSyncRead::error_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupSyncRead'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_sync_write.h(43,43): warning C4251: 'dynamixel::GroupSyncWrite::id_list_': class 'std::vector<uint8_t,std::allocator<uint8_t>>'에서는 class 'dynamixel::GroupSyncWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\packet_handler.h(205): message : 'std::vector<uint8_t,std::allocator<uint8_t>>' 선언을 참조하십시오.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_sync_write.h(44,45): warning C4251: 'dynamixel::GroupSyncWrite::data_list_': class 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>'에서는 class 'dynamixel::GroupSyncWrite'의 클라이언트에서 DLL 인터페이스를 사용하도록 지정해야 합니다.
C:\github\HASSAM\dynamixel\c++\include\dynamixel_sdk\group_bulk_read.h(46): message : 'std::map<uint8_t,uint8_t *,std::less<uint8_t>,std::allocator<std::pair<const uint8_t,uint8_t *>>>' 선언을 참조하십시오.
C:\github\HASSAM\rplidar\sdk_lidar\sdk\include\rplidar_protocol.h(59,16): warning C4200: 비표준 확장이 사용됨: 구조체/공용 구조체의 배열 크기가 0입니다.
C:\github\HASSAM\rplidar\sdk_lidar\sdk\include\rplidar_protocol.h(59,16): message : 이 멤버는 기본값으로 설정된 생성자 또는 복사/이동 대입 연산자에서 무시됩니다.
C:\github\HASSAM\rplidar\sdk_lidar\sdk\include\rplidar_cmd.h(260,20): warning C4200: 비표준 확장이 사용됨: 구조체/공용 구조체의 배열 크기가 0입니다.
C:\github\HASSAM\rplidar\sdk_lidar\sdk\include\rplidar_cmd.h(260,20): message : 이 멤버는 기본값으로 설정된 생성자 또는 복사/이동 대입 연산자에서 무시됩니다.
C:\github\HASSAM\src\HASSAM\HASSAM\main.cpp(18,13): warning C4244: '초기화 중': 'double'에서 'float'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\github\HASSAM\src\HASSAM\HASSAM\main.cpp(19,25): warning C4244: '인수': 'float'에서 'int'(으)로 변환하면서 데이터가 손실될 수 있습니다.
C:\github\HASSAM\src\HASSAM\HASSAM\main.cpp(11,13): warning C4996: 'fopen': This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
